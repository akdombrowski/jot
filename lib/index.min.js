"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.jwtEncode=exports.parseToJSON=exports.base64URLEncode=exports.createHeaderPayload=exports.hs256Verify=exports.rs256PEMVerify=exports.rs256JWKVerify=exports.rs256PEMSign=exports.rs256JWKSign=exports.hs256Sign=exports.jwtDecode=void 0;var _crypto=_interopRequireDefault(require("crypto")),jwtDecode=function(r){try{if(!r.includes("."))throw new Error("Need at least one '.'");var e=r.split("."),o=e[0],t=Buffer.from(o,"base64url").toString("utf8");if(!t)throw console.error("base64URLDecodedHeader"),console.error(t),new Error("Header isn't base64url encoded");var a=JSON.parse(t),s=a.typ,n=a.cty,i=a.alg;if(s&&"JWT"!==s)throw new Error("Need to be type jwt. Received: ".concat(s));if(n&&"JWT"!==n)throw new Error("Need a cty of 'JWT'. Received: ".concat(n));if(!i)throw new Error("Missing algorithm in JOSE header.");if(3===e.length){var c=e[1],f=Buffer.from(c,"base64url").toString("utf8");return{header:a,payload:JSON.parse(f),signature:e[2]}}throw new SyntaxError("Not using compact serialization (JWS).")}catch(r){throw console.error("I found an error :(."),r}};exports.jwtDecode=jwtDecode;var debugging=function(r){console.error(r.message,r),console.error("e instanceof SyntaxError"),console.error(r instanceof SyntaxError),console.error(r.message),console.error(r.name),console.error(r.fileName),console.error(r.lineNumber),console.error(r.columnNumber),console.error(r.stack)},hs256Sign=function(r,e){var o=_crypto.default.createSecretKey(e,"base64url"),t=_crypto.default.createHmac("sha256",o);t.update(r,"ascii");var a=t.digest();return Buffer.from(a).toString("base64url")};exports.hs256Sign=hs256Sign;var rs256JWKSign=function(r,e){var o;if(!_crypto.default.getHashes().includes("RSA-SHA256"))throw console.error("I found an error :(."),console.error("RSA-SHA256 not found"),new Error("RSA-SHA256 isn't available in the current system.");try{try{o=JSON.parse(e)}catch(r){if(!JSON.stringify(e))throw new Error("Not valid JSON.");o=e}var t=_crypto.default.createPrivateKey({key:o,format:"jwk"});return _crypto.default.sign("sha256",Buffer.from(r),{key:t}).toString("base64url")}catch(r){r instanceof TypeError?o=e:(console.error("I found an error :(."),console.error(r.message,r))}return null};exports.rs256JWKSign=rs256JWKSign;var rs256PEMSign=function(r,e,o){var t;if(!_crypto.default.getHashes().includes("RSA-SHA256"))return console.error("RSA-SHA256 not found"),null;try{t=_crypto.default.createPrivateKey({key:e,format:"pem"})}catch(r){if(r instanceof TypeError&&r.message.includes("Passphrase required for encrypted key")){if(!o)throw new Error("Need a passphrase since private key is encrypted");t=_crypto.default.createPrivateKey({key:e,format:"pem",passphrase:o})}}return _crypto.default.sign("sha256",Buffer.from(r),{key:t}).toString("base64url")};exports.rs256PEMSign=rs256PEMSign;var rs256JWKVerify=function(r,e){var o=r.split("."),t=o[0]+"."+o[1],a=o[2],s=_crypto.default.createPublicKey({key:e,format:"jwk"});return _crypto.default.verify(null,Buffer.from(t,"ascii"),{key:s},Buffer.from(a,"base64url"))};exports.rs256JWKVerify=rs256JWKVerify;var rs256PEMVerify=function(r,e){var o=r.split("."),t=o[0]+"."+o[1],a=o[2],s=_crypto.default.createPublicKey({key:e,format:"pem"});return _crypto.default.verify(null,Buffer.from(t,"ascii"),{key:s},Buffer.from(a,"base64url"))};exports.rs256PEMVerify=rs256PEMVerify;var hs256Verify=function(r,e,o){var t=r.split("."),a=t[0]+"."+t[1],s=t[2],n=_crypto.default.createSecretKey(e,"base64url");n=o&&Buffer.isEncoding(o)?_crypto.default.createSecretKey(e,o):_crypto.default.createSecretKey(e,"base64url");var i=_crypto.default.createHmac("sha256",n);i.update(a,"ascii");var c=i.digest();return Buffer.from(c).toString("base64url")===s};exports.hs256Verify=hs256Verify;var createHeaderPayload=function(r,e){if(Buffer.isEncoding("base64url")){var o,t;if("string"==typeof r)o=Buffer.from(r,"ascii").toString("base64url");else{var a=parseToJSON(r);o=base64URLEncode(a)}if("string"==typeof e)t=Buffer.from(e,"ascii").toString("base64url");else{var s=parseToJSON(e);t=base64URLEncode(s)}return"".concat(o,".").concat(t)}throw new Error("Error: Base64URL encoding isn't available.")};exports.createHeaderPayload=createHeaderPayload;var base64URLEncode=function(r){if(Buffer.isEncoding("base64url")){var e=JSON.stringify(r);return Buffer.from(e,"ascii").toString("base64url")}throw new Error("Error: Base64URL encoding isn't available")};exports.base64URLEncode=base64URLEncode;var parseToJSON=function(r){if(Buffer.isEncoding("base64url"))return r instanceof Object?r:JSON.parse(r);throw new Error("Error: Base64URL encoding isn't available")};exports.parseToJSON=parseToJSON;var jwtEncode=function(r,e,o,t){var a=r;if(Buffer.isEncoding("base64url")){if(r instanceof Object){a=r;var s=JSON.stringify(r);Buffer.from(s,"ascii").toString("base64url")}else a=JSON.parse(r),Buffer.from(r,"ascii").toString("base64url");var n,i=createHeaderPayload(r,e),c=a.alg;if(c){switch(c.toLowerCase()){case"hs256":n=hs256Sign(i,o);break;case"rs256":if(!t||!t.keyFormat)throw new Error("Need to specify keyFormat in options for RS256 algorithm as either jwk or pem.");var f=t.keyFormat;"jwk"===f.toLowerCase()?n=rs256JWKSign(i,o):"pem"===f.toLowerCase()&&(n=t.passphrase?rs256PEMSign(i,o,t.passphrase):rs256PEMSign(i,o));break;default:throw new Error("Unsupported alg: ".concat(c))}return i+"."+n}throw new Error("Algorithm couldn't be determined. alg:"+c)}throw new Error("Error: Base64URL encoding isn't available.")};exports.jwtEncode=jwtEncode;var _default=jwtDecode;exports.default=_default;
